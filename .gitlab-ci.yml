.general_setup:
  before_script:

.setup_gnu:
  before_script:
    - source setup_gitlab_runner_env
    - source ${GNU_SETUP}

.setup_intel:
  before_script:
    - source setup_gitlab_runner_env
    - source ${INTEL_SETUP}

.setup_cray:
  before_script:
    - source setup_gitlab_runner_env

.test_common:
  artifacts:
    when: always
    reports:
      junit: tests/report.xml
  

#-----------------------------------------------------------------------------#

debug_build_gnu:
  extends: .setup_gnu
  script:
    - HOME=${CI_HOME} CMP=gnu BUILD=debug make all
  allow_failure: true

build_gnu:
  extends: .setup_gnu
  script:
    - HOME=${CI_HOME} CMP=gnu make obj
  artifacts:
    paths: [obj/]

test_gnu:
  needs: 
    - job: build_gnu
      artifacts: true
  extends: 
    - .setup_gnu
    - .test_common
  script:
    - HOME=${CI_HOME} CMP=gnu make tests

#-----------------------------------------------------------------------------#

debug_build_intel:
  extends: .setup_intel
  script:
    - HOME=${CI_HOME} CMP=intel BUILD=debug make all
  allow_failure: true

build_intel:
  extends: .setup_intel
  script:
    - HOME=${CI_HOME} CMP=intel make obj
  artifacts:
    paths: [obj/]

test_intel:
  needs: 
    - job: build_intel
      artifacts: true
  extends: 
    - .setup_intel
    - .test_common
  script:
    - HOME=${CI_HOME} CMP=intel make tests

#-----------------------------------------------------------------------------#

debug_build_intelx:
  extends: .setup_intel
  script:
    - HOME=${CI_HOME} CMP=intelx BUILD=debug make all
  allow_failure: true

build_intelx:
  extends: .setup_intel
  script:
    - HOME=${CI_HOME} CMP=intelx make obj
  artifacts:
    paths: [obj/]

test_intelx:
  needs: 
    - job: build_intelx
      artifacts: true
  extends: 
    - .setup_intel
    - .test_common
  script:
    - HOME=${CI_HOME} CMP=intelx make tests

#-----------------------------------------------------------------------------#

debug_build_cray:
  extends: .setup_cray
  script:
    - HOME=${CI_HOME} cray_run_command "CMP=cray BUILD=debug make all"
  allow_failure: true

build_cray:
  extends: .setup_cray
  script:
    - HOME=${CI_HOME} cray_run_command "CMP=cray make obj"
  artifacts:
    paths: [obj/]

test_cray:
  needs: 
    - job: build_cray
      artifacts: true
  extends: 
    - .setup_cray
    - .test_common
  script:
    - cray_run_command "slurmctld -vv"
    - cray_run_command "slurmd -vv"
    - HOME=${CI_HOME} cray_run_command "CMP=cray make tests"

#-----------------------------------------------------------------------------#

lint_src:
  script: 
    - bash build_tools/lint.sh lint src
    - bash build_tools/lint.sh score_each_file src
  allow_failure: true

lint_tests:
  script: 
    - bash build_tools/lint.sh lint tests
    - bash build_tools/lint.sh score_each_file tests
  allow_failure: true

#-----------------------------------------------------------------------------#

generate_ford_docs:
  extends: .general_setup
  script:
    - make ford
  artifacts:
    paths:
      - doc
  allow_failure: true

generate_code_docs:
  extends: .general_setup
  script:
    - make docs
    - make docs-latex
  artifacts:
    paths:
      - latex/refman.pdf
  allow_failure: true

generate_dev_guide:
  extends: .general_setup
  script:
    - cd dev_guide
    - make all
  artifacts:
    paths:
      - dev_guide/ccs_dev_guide.pdf
  allow_failure: true

#-----------------------------------------------------------------------------#

profile_gnu:
  needs: 
    - job: build_gnu
      artifacts: false
  extends: .setup_gnu
  script:
    - HOME=${CI_HOME} CMP=gnu PROFILE=yes make all
  artifacts:
    paths:
      - opt_info.txt
  allow_failure: true

profile_intel:
  needs: 
    - job: build_intel
      artifacts: false
  extends: .setup_intel
  script:
    - HOME=${CI_HOME} CMP=intel PROFILE=yes make all
  artifacts:
    paths:
      - obj/*.html
      - ./*.html
  allow_failure: true

profile_cray:
  needs: 
    - job: build_cray
      artifacts: false
  extends: .setup_cray
  script:
    - HOME=${CI_HOME} cray_run_command "CMP=cray PROFILE=yes make all"
  artifacts:
    paths:
      - obj/*.lst
      - ./*.lst
  allow_failure: true
